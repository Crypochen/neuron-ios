/* 
  Localizable.strings
  Neuron

  Created by James Chen on 2018/11/03.
  Copyright © 2018 Cryptape. All rights reserved.
*/

// Common
// ---------------------------------------------------------
"Common.Connection.ConnectionLost" = "The connection to the Internet is broken";
"Common.Connection.FailToLoadPage" = "Failed to load the page";
"Common.Connection.Cancel" = "取消";
"Common.Connection.Confirm" = "确定";
"Common.Connection.UserCancel" = "用户取消";
"Common.Connection.ScanEmpty" = "扫描结果为空";
"Common.Connection.LoseConnect" = "似乎已断开与互联网的连接";
"Common.Connection.LoadFaild" = "页面加载失败";
"Common.Connection.Refresh" = "刷新";

// DApp
// ---------------------------------------------------------
"DApp.Home" = "DApp";
"DApp.Search.TextFieldPlaceholder" = "请输入应用网址";
"DApp.Search.DeleteHistory" = "Delete";

// DApp Browser
// ---------------------------------------------------------
"DApp.Browser.InvalidLink" = "无效的链接地址";
"DApp.Browser.Collection" = "收藏";
"DApp.Browser.CollectSuccess" = "收藏成功";
"DApp.Browser.CollectFaild" = "收藏失败";
"DApp.Browser.AlertTitle" = "提示";
"DApp.Browser.CheckNoAliPay" = "未检测到支付宝客户端，请安装后重试。";
"DApp.Browser.CheckNoWeChat" = "未检测到微信客户端，请安装后重试。";
"DApp.Browser.SignFaild" = "签名失败";
"DApp.Browser.PayFaild" = "支付失败";

// DApp Contract
// ---------------------------------------------------------
"DApp.Contract.TransactionSend" = "交易已发送";

// DApp Advanced
// ---------------------------------------------------------
"DApp.Advanced.ETHRecommend" = "以太坊推荐 ";
"DApp.Advanced.Gas" = "Gas费用";
"DApp.Advanced.EmptyGasPrice" = "请输入GasPrice";
"DApp.Advanced.MinGasPrice" = "请输入的GasPrice不小于%@ GWei";

// DApp DAppTakePhoto
// ---------------------------------------------------------
"DApp.DAppTakePhoto.CameraPermissions" = "拍照需要相机访问权限";
"DApp.DAppTakePhoto.Open" = "开启";
"DApp.DAppTakePhoto.NoAccess" = "无相机访问权限";

// DApp MyDApp
// ---------------------------------------------------------
"DApp.MyDApp.Title" = "我的ÐApp";

// DApp NFT
// ---------------------------------------------------------
"DApp.NFT.EmptyData" = "您还没有藏品数据";
"DApp.NFT.Title" = "我的藏品";
"DApp.NFT.DetailTitle" = "藏品详情";

// Settings
// ---------------------------------------------------------
"Settings.About.AboutUs" = "About us";

// DApp Transaction
// ---------------------------------------------------------
"DApp.SendTransactionError.emptyValue" = "Transaction's value format error";
"DApp.SendTransactionError.emptyQuota" = "Transaction's quota format error";
"DApp.SendTransactionError.emptyGasLimit" = "Transaction's gas limit format error";
"DApp.SendTransactionError.emptyGasPrice" = "Transaction's gas price format error";

// Mnemonic Validator
// ---------------------------------------------------------
"MnemonicValidator.emptyMnemonic" = "Empty Mnemonic";
"MnemonicValidator.invalidMnemonic" = "Invalid Mnemonic";

// Wallet Manager Errors
// ---------------------------------------------------------
"WalletManager.Error.invalidPassword" = "Invalid password";
"WalletManager.Error.invalidPrivateKey" = "Invalid Private Key";
"WalletManager.Error.invalidKeystore" = "Invalid Keystore";
"WalletManager.Error.invalidMnemonic" = "Invalid Mnemonic";
"WalletManager.Error.emptyMnemonic" = "Empty Mnemonic";
"WalletManager.Error.accountAlreadyExists" = "You already have this wallet";
"WalletManager.Error.accountNotFound" = "Wallet not found";
"WalletManager.Error.failedToDeleteAccount" = "Failed to delete wallet";
"WalletManager.Error.failedToUpdatePassword" = "Failed to update wallet password";
"WalletManager.Error.failedToSaveKeystore" = "Failed to save the keystore";
"WalletManager.Error.unknown" = "Unknow error";

// Send Transactoin Error
// ---------------------------------------------------------
"SendTransactionError.invalidSourceAddress" = "Invalid source address";
"SendTransactionError.invalidDestinationAddress" = "Invalid destination address";
"SendTransactionError.invalidContractAddress" = "Invalid contract ADdress";
"SendTransactionError.noAvailableKeys" = "Wallet not found";
"SendTransactionError.createTransactionIssue" = "Failed to create transaction";
"SendTransactionError.invalidChainId" = "Invalid chain ID";
"SendTransactionError.signTXFailed" = "Failed to sign the transaction";

// Custom Token Error
// ---------------------------------------------------------
"CustomTokenError.wrongBalanceError" = "Wrong balance";
"CustomTokenError.badNameError" = "Bad token name";
"CustomTokenError.badSymbolError" = "Bad token symbol";
"CustomTokenError.undefinedError" = "Undefined error";

// Sign Message Error
// ---------------------------------------------------------
"MessageSign.Error.walletNotFound" = "Wallet not found";
"MessageSign.Error.signMessageFailed" = "Failed to sign the message";

// Wallet
// ---------------------------------------------------------
"Wallet" = "钱包";
"Wallet.token" = "代币";
"Wallet.addToken" = "添加资产";
"Wallet.transaction" = "转账";
"Wallet.receipt" = "收款";
"Wallet.totalAmount" = "总资产";
"Wallet.noAmount" = "暂无资产";

// Wallet QRCode
// ---------------------------------------------------------
"Wallet.QRCode.desc" = "此地址只接收AppChain、以太坊Token，发送其他币种到此地址将不可找回";
"Wallet.QRCode.copy" = "复制";
"Wallet.QRCode.copySuccess" = "地址已经复制到粘贴板";

// Transaction History
// ---------------------------------------------------------
"Transaction.History.title" = "交易列表";
"TokenProfile.Ether.overview" = "Ethereum是一个运行智能合约的去中心化平台，应用将完全按照程序运作，不存在任何欺诈，审查与第三方干预的可能。";

// Transaction Status
// ---------------------------------------------------------
"TransactionStatus.success" = "交易成功";
"TransactionStatus.pending" = "交易进行中";
"TransactionStatus.failure" = "交易失败";

// Send Transaction
// ---------------------------------------------------------
"Transaction.Send.balanceNotSufficient" = "请确保账户剩余[symbol]高于矿工费用，以便顺利完成转账～";
"Transaction.Send.addressError" = "您的地址错误，请重新输入";
"Transaction.Send.title" = "[symbol]转账";
"Transaction.Send.transactionAvailableBalance" = "您输入的金额超过您的余额，是否全部转出？";
"Transaction.Send.gasPriceSettingIsTooLow" = "您的GasPrice设置过低，建议输入推荐值以快速转账";
"Transaction.Send.gasLimitSettingIsTooLow" = "请确保输入的gaslimit大于等于[value]";
"Transaction.Send.gasCostSetting" = "高级设置";
"Transaction.Send.gasCost" = "Gas 费用";
"Transaction.Send.extenData" = "包含数据";
"Transaction.Send.gasCostSettingDesc" = "数据将上传至区块链，您的数据安全将得到一百分保障！";
"Transaction.Send.input" = "请输入";
"Transaction.Send.inputHexData" = "请输入十六进制数据";
"Transaction.Send.confirm" = "确定";
"Transaction.Send.cancel" = "取消";
"Transaction.Send.next" = "下一步";
"Transaction.Send.txToken" = "转账币种";
"Transaction.Send.txAmount" = "转账金额";
"Transaction.Send.inputAmount" = "输入金额";
"Transaction.Send.receiptAddress" = "收款地址";
"Transaction.Send.gasFee" = "矿工费用";

// Authentication
// ---------------------------------------------------------
"Authentication.clickFaceIdAuth" = "点击进行验证 Face Id";
"Authentication.clickTouchIdAuth" = "点击进行验证 Touch Id";
"Authentication.authFaceIdTitle" = "请验证 Face ID";
"Authentication.authTouchIdTitle" = "请验证 Touch ID";

"Authentication.selectWallet" = "选择钱包";
"Authentication.walletPassword" = "钱包密码";
"Authentication.confirmPassword" = "确定";
"Authentication.walletPasswordError" = "密码不正确请重新输入";

"Authentication.openFaceIdAuthDesc" = "请开启刷脸验证，确保您的资产安全";
"Authentication.openFaceIdAuth" = "开启刷脸验证";
"Authentication.openTouchIdAuthDesc" = "请开启指纹验证，确保您的资产安全";
"Authentication.openTouchIdAuth" = "开启指纹验证";

"Authentication.Error.touchIDNotEnrolled" = "未设置 Touch ID";
"Authentication.Error.faceIDNotEnrolled" = "未设置 Face ID";
"Authentication.Error.faceIDNotAvailable" = "您的Face ID未开启，请输入密码登陆";
"Authentication.Error.biometryLockout" = "多次验证失败被锁定";
"Authentication.Error.authFailed" = "验证失败，请重新验证";
